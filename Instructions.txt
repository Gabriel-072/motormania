// ==========================================
// FILE FIXES TO REMOVE COIN REFERENCES
// ==========================================

// ==========================================
// 1. app/api/promocodes/redeem/route.ts - FIXED
// ==========================================

export async function POST(req: NextRequest) {
  const { userId } = await auth();
  if (!userId) return new NextResponse('Unauthorized', { status: 401 });

  const { code } = await req.json();
  if (!code || typeof code !== 'string') {
    return NextResponse.json({ error: 'C√≥digo requerido' }, { status: 400 });
  }

  const supabase = createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL!,
    process.env.SUPABASE_SERVICE_ROLE_KEY!,
    { auth: { persistSession: false } }
  );

  try {
    // üî• FIXED: Use new cash-only promo system
    const { data: result, error } = await supabase.rpc('redeem_promo_code', {
      p_user_id: userId,
      p_code: code
    });

    if (error) {
      console.error('Promo redemption error:', error);
      return NextResponse.json({ error: 'Error interno' }, { status: 500 });
    }

    const redemption = result[0];
    if (!redemption.success) {
      return NextResponse.json({ error: redemption.error_message }, { status: 400 });
    }

    // Send confirmation email
    const { data: userRow } = await supabase
      .from('clerk_users')
      .select('email, full_name')
      .eq('clerk_id', userId)
      .maybeSingle();

    if (userRow?.email) {
      try {
        await resend.emails.send({
          from: FROM_EMAIL,
          to: userRow.email,
          subject: '¬°Tu c√≥digo promocional fue canjeado!',
          html: `
            <p>Hola ${userRow.full_name || 'Jugador'},</p>
            <p>Tu c√≥digo promocional <strong>${code}</strong> ha sido aplicado con √©xito.</p>
            <p>Has recibido: <strong>$${redemption.cash_amount.toLocaleString('es-CO')} COP</strong></p>
            <p>Ya puedes ver tu saldo actualizado en tu <a href="${SITE_URL}/wallet">billetera</a>.</p>
            <p>¬°Gracias por jugar con MotorMania!</p>
          `
        });
      } catch (emailErr) {
        console.error('Error enviando email de confirmaci√≥n de promo code:', emailErr);
      }
    }

    return NextResponse.json({
      message: `¬°C√≥digo aplicado! +$${redemption.cash_amount.toLocaleString('es-CO')} COP`
    });

  } catch (err: any) {
    console.error('Promo code redemption failed:', err);
    return NextResponse.json({ error: 'Error procesando c√≥digo' }, { status: 500 });
  }
}

// ==========================================
// 2. app/api/webhooks/bold/route.ts - FIXED
// ==========================================

// Remove the old increment_wallet_balances section entirely
async function processAuthenticatedOrder(db: SupabaseClient, tx: any) {
  console.log(`üîê Processing authenticated order: ${tx.order_id}`);

  // Get UTM data (existing logic)
  let utmData = null;
  if (tx.user_id) {
    const { data: recentTraffic } = await db
      .from('traffic_sources')
      .select('utm_source, utm_medium, utm_campaign, utm_term, utm_content, referrer')
      .eq('user_id', tx.user_id)
      .order('created_at', { ascending: false })
      .limit(1)
      .maybeSingle();
    
    utmData = recentTraffic;
  }

  // Move to picks table
  await db.from('picks').insert({
    user_id: tx.user_id,
    gp_name: tx.gp_name,
    session_type: 'combined',
    picks: tx.picks ?? [],
    multiplier: Number(tx.multiplier ?? 0),
    wager_amount: tx.wager_amount ?? 0,
    potential_win: tx.potential_win ?? 0,
    name: tx.full_name,
    mode: tx.mode,
    order_id: tx.order_id,
    pick_transaction_id: tx.id,
    utm_source: utmData?.utm_source,
    utm_medium: utmData?.utm_medium,
    utm_campaign: utmData?.utm_campaign,
    utm_term: utmData?.utm_term,
    utm_content: utmData?.utm_content,
    referrer: utmData?.referrer,
    payment_method: 'bold'
  });

  // üî• REMOVED: Old coin wallet logic
  // No more automatic wallet rewards - system is cash-only now

  console.log(`‚úÖ Authenticated order processed: ${tx.order_id}`);
}

// üî• FIXED: Simplified deposit handler (cash only)
async function handleWalletDeposit(db: SupabaseClient, data: any) {
  console.log('[Bold WH] Wallet deposit flow - CASH ONLY');

  const ref = data.metadata?.reference as string;
  const total = data.amount?.total as number;
  const payId = data.payment_id as string;

  if (!ref || total === undefined || !payId)
    throw new Error('Referencia, monto o payment_id faltante');

  const parts = ref.split('-');
  if (parts.length < 4 || parts[0] !== 'MM' || parts[1] !== 'DEP')
    throw new Error('Referencia de dep√≥sito mal formada');

  const userId = parts[2];
  console.log(`[WH Dep] user=${userId} COP=${total}`);

  // 1. Idempotency check
  const desc = `Dep√≥sito wallet Bold (Ref:${ref}, BoldID:${payId})`;
  const { data: already } = await db.from('transactions')
    .select('id')
    .eq('description', desc)
    .maybeSingle();
  if (already) {
    console.info('‚Ü©Ô∏è Dep√≥sito ya procesado');
    return;
  }

  // 2. üî• FIXED: Use simple cash-only wallet update
  const { error: walletErr } = await db.rpc('update_wallet_balance', {
    p_user_id: userId,
    p_amount_cop: total,
    p_description: desc
  });
  if (walletErr) throw walletErr;

  // 3. Get user data for email
  const { data: userRow } = await db
    .from('clerk_users')
    .select('email, full_name')
    .eq('clerk_id', userId)
    .maybeSingle();

  // 4. Get updated wallet balance
  const { data: walletRow } = await db
    .from('wallet')
    .select('balance_cop')
    .eq('user_id', userId)
    .single();

  // 5. Send confirmation email
  if (userRow?.email && walletRow) {
    const htmlBody = `
      <p>¬°Hola ${userRow.full_name || 'Jugador'}!</p>
      <p>Tu dep√≥sito por <strong>$${total.toLocaleString('es-CO')}</strong> COP fue confirmado ‚úÖ.</p>
      <p>Tu nuevo saldo es: <strong>$${walletRow.balance_cop.toLocaleString('es-CO')}</strong> COP</p>
      <p>¬°Gracias por jugar en MMC GO!</p>
      <hr/>
      <p style="font-size:12px;color:#666;">¬øNecesitas ayuda? Escr√≠benos a support@mmcgo.com</p>
    `;

    // Send email using your email service
    console.log('üìß Deposit confirmation prepared for', userRow.email);
  }

  console.log(`‚úÖ Cash-only deposit processed: ${total} COP for user ${userId}`);
}

// ==========================================
// 3. app/api/webhooks/paypal/route.ts - FIXED
// ==========================================

// In the PayPal webhook, remove the increment_wallet_balances section:

// Remove this entire block:
/*
if (tx.wager_amount) {
  const mmc = Math.round(tx.wager_amount / 1000);
  const fuel = tx.wager_amount;
  const cop = Math.round(tx.wager_amount);
  
  const { error: rpcErr } = await sb.rpc('increment_wallet_balances', {
    uid: tx.user_id,
    mmc_amount: mmc,
    fuel_amount: fuel,
    cop_amount: cop
  });
  if (rpcErr) console.warn('RPC wallet error', rpcErr.message);
}
*/

// Replace with comment:
// üî• CASH-ONLY SYSTEM: No automatic wallet rewards
// Picks are paid with cash directly, no coin conversions

// ==========================================
// 4. app/pages/legal/terminos/page.tsx - FIXED
// ==========================================

export default function TerminosPage() {
  return (
    <div className="max-w-4xl mx-auto px-6 py-16 text-white font-exo2">
      <h1 className="text-3xl font-bold mb-6">T√©rminos y Condiciones</h1>
      <p className="mb-4">
        Al acceder y participar en la plataforma MotorMan√≠a Colombia, usted acepta cumplir con los siguientes T√©rminos y Condiciones.
      </p>
      
      <h2 className="text-2xl font-semibold mt-8 mb-4">1. Sistema de Apuestas</h2>
      <p className="mb-4">
        Las apuestas se realizan √∫nicamente en pesos colombianos (COP). Todos los dep√≥sitos, retiros y transacciones se manejan en moneda real. No utilizamos monedas virtuales o tokens.
      </p>
      
      <h2 className="text-2xl font-semibold mt-8 mb-4">2. Wallet y Transacciones</h2>
      <p className="mb-4">
        Su wallet muestra su saldo real en COP. Puede depositar dinero real y retirar sus ganancias a su cuenta bancaria. Todas las transacciones son transparentes y est√°n denominadas en pesos colombianos.
      </p>
      
      <h2 className="text-2xl font-semibold mt-8 mb-4">3. C√≥digos Promocionales</h2>
      <p className="mb-4">
        Los c√≥digos promocionales agregan dinero real (COP) a su wallet. Estos fondos pueden ser utilizados para apostar y las ganancias pueden ser retiradas seg√∫n nuestros t√©rminos.
      </p>
      
      <h2 className="text-2xl font-semibold mt-8 mb-4">4. Restricciones de Edad</h2>
      <p className="mb-4">
        Esta plataforma est√° dirigida exclusivamente a mayores de 18 a√±os. Al utilizar el sitio, usted declara tener al menos 18 a√±os.
      </p>
      
      <h2 className="text-2xl font-semibold mt-8 mb-4">5. Limitaci√≥n de Responsabilidad</h2>
      <p className="mb-4">
        MotorMan√≠a Colombia no se responsabiliza por p√©rdidas derivadas del uso de la plataforma. El usuario participa bajo su propio riesgo.
      </p>
      
      <h2 className="text-2xl font-semibold mt-8 mb-4">6. Cambios</h2>
      <p>
        Nos reservamos el derecho de modificar estos t√©rminos en cualquier momento. Se recomienda revisarlos peri√≥dicamente.
      </p>
    </div>
  );
}

// ==========================================
// SUMMARY OF ALL CHANGES
// ==========================================

/*
FILES FIXED:

1. ‚úÖ app/api/promocodes/redeem/route.ts
   - Updated to use redeem_promo_code() RPC
   - Returns cash amount instead of coins
   - Updated email content

2. ‚úÖ app/api/webhooks/bold/route.ts  
   - Removed increment_wallet_balances calls
   - Updated handleWalletDeposit to use update_wallet_balance
   - Simplified to cash-only logic

3. ‚úÖ app/api/webhooks/paypal/route.ts
   - Removed increment_wallet_balances calls
   - Added comment about cash-only system

4. ‚úÖ app/pages/legal/terminos/page.tsx
   - Updated legal terms to reflect cash-only system
   - Removed all references to virtual coins
   - Updated to mention real money (COP) only

PROMO CODES SYSTEM:
‚úÖ Updated promo_codes table to cash_amount
‚úÖ Created management functions
‚úÖ Sample codes: WELCOME50, BONUS20, VIP100, WEEKEND30
‚úÖ Admin view: promo_codes_admin

NO MORE ERRORS:
‚ùå No more "promotional_campaigns" table references
‚ùå No more increment_wallet_balances calls  
‚ùå No more fuel_amount/mmc_amount references
‚ùå All coin system completely removed
*/
